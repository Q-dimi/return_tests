
/*
  examples
*/


module.exports = { 

    tests: [
      { randomized: { on: true, parameters: ['number', 'string', 'object'], when_obj_passed: ['number', 'string', 'BigInt'], when_arr_passed: ['number', 'string', 'BigInt'], multiply_amount: 5 },  function_called: { on: true, function_name: 'apple', function_directory: '/sauce', function_description: 'apple sauce', base_param_names: 'apple, sauce', function: function (a, b, c) { try { return a + b; } catch(err) { return err; } } }, unit: { allowed_types: { on: true, values: ['number', 'BigInt'] }, allowed_values: { on: true, values: [7, 12] }, regex_set: { on: false, values: [] } }, index_of_set: 1, parameters: { a: 2, b: 5, c: 77 } },
      { randomized: { on: true, parameters: ['number', 'string', 'array'], when_obj_passed: ['number', 'string', 'BigInt'], when_arr_passed: ['number', 'string', 'BigInt'], multiply_amount: 5 }, function_called: { on: false, function_name: '', function_directory: '', function_description: '', base_param_names: '', function: function (a, b, c) { try { return a + b; } catch(err) { return err; } } }, unit: { allowed_types: { on: true, values: ['number', 'BigInt'] }, allowed_values: { on: true, values: [7, 12] }, regex_set: { on: false, values: [] } }, index_of_set: 2, parameters: { a: 2, b: 5, c: 77 } },
      { randomized: { on: false, parameters: ['number', 'string', 'object'], when_obj_passed: ['number', 'string', 'BigInt'], when_arr_passed: ['number', 'string', 'BigInt'], multiply_amount: 17 }, function_called: { on: false, function_name: '', function_directory: '', function_description: '', base_param_names: '', function: function (a, b) { try { return a + b; } catch(err) { return err; } } }, unit: { allowed_types: { on: true, values: ['number', 'BigInt'] }, allowed_values: { on: false, values: [7, 12] }, regex_set: { on: false, values: [] } }, index_of_set: 3, parameters: { a: 2, b: 5, c: 77 } },
      { randomized: { on: false, parameters: ['number', 'string', 'object'], when_obj_passed: ['number', 'string', 'BigInt'], when_arr_passed: ['number', 'string', 'BigInt'], multiply_amount: 17 }, function_called: { on: false, function_name: '', function_directory: '', function_description: '', base_param_names: '', function: function (a, b) { try { return a + b; } catch(err) { return err; } } }, unit: { allowed_types: { on: true, values: ['number', 'BigInt'] }, allowed_values: { on: false, values: [7, 12] }, regex_set: { on: false, values: [] } }, index_of_set: 4, parameters: { a: 2, b: 5, c: 77 } },
      { randomized: { on: false, parameters: ['number', 'string', 'object'], when_obj_passed: ['number', 'string', 'BigInt'], when_arr_passed: ['number', 'string', 'BigInt'], multiply_amount: 17 }, function_called: { on: false, function_name: '', function_directory: '', function_description: '', base_param_names: '', function: function (a, b) { try { return a + b; } catch(err) { return err; } } }, unit: { allowed_types: { on: true, values: ['number', 'BigInt'] }, allowed_values: { on: false, values: [7, 12] }, regex_set: { on: false, values: [] } }, index_of_set: 5, parameters: { a: 2, b: 5, c: 77 } },
      { randomized: { on: false, parameters: ['number', 'string', 'object'], when_obj_passed: ['number', 'string', 'BigInt'], when_arr_passed: ['number', 'string', 'BigInt'], multiply_amount: 17 }, function_called: { on: false, function_name: '', function_directory: '', function_description: '', base_param_names: '', function: function (a, b) { try { return a + b; } catch(err) { return err; } } }, unit: { allowed_types: { on: true, values: ['number', 'BigInt'] }, allowed_values: { on: false, values: [7, 12] }, regex_set: { on: false, values: [] } }, index_of_set: 6, parameters: { a: 2, b: 5, c: 77 } },
      { randomized: { on: false, parameters: ['number', 'string', 'object'], when_obj_passed: ['number', 'string', 'BigInt'], when_arr_passed: ['number', 'string', 'BigInt'], multiply_amount: 17 }, function_called: { on: false, function_name: '', function_directory: '', function_description: '', base_param_names: '', function: function (a, b) { try { return a + b; } catch(err) { return err; } } }, unit: { allowed_types: { on: true, values: ['number', 'BigInt'] }, allowed_values: { on: false, values: [7, 12] }, regex_set: { on: false, values: [] } }, index_of_set: 7, parameters: { a: 2, b: 5, c: 77 } },
      { randomized: { on: false, parameters: ['number', 'string', 'object'], when_obj_passed: ['number', 'string', 'BigInt'], when_arr_passed: ['number', 'string', 'BigInt'], multiply_amount: 17 }, function_called: { on: false, function_name: '', function_directory: '', function_description: '', base_param_names: '', function: function (a, b) { try { return a + b; } catch(err) { return err; } } }, unit: { allowed_types: { on: true, values: ['number', 'BigInt'] }, allowed_values: { on: false, values: [7, 12] }, regex_set: { on: false, values: [] } }, index_of_set: 8, parameters: { a: 2, b: 5, c: 77 } },
      { randomized: { on: false, parameters: ['number', 'string', 'object'], when_obj_passed: ['number', 'string', 'BigInt'], when_arr_passed: ['number', 'string', 'BigInt'], multiply_amount: 17 }, function_called: { on: false, function_name: '', function_directory: '', function_description: '', base_param_names: '', function: function (a, b) { try { return a + b; } catch(err) { return err; } } }, unit: { allowed_types: { on: true, values: ['number', 'BigInt'] }, allowed_values: { on: false, values: [7, 12] }, regex_set: { on: false, values: [] } }, index_of_set: 9, parameters: { a: 2, b: 5, c: 77 } },
    ]
      
  }


